AWSTemplateFormatVersion: '2010-09-09'
Description: CSYE 6225 - application cf stack

Parameters:
  ImageIdparam:
    Default: "ami-0282cf077acf11412"
    Description: ImageId parameter (eg ami-0282cf077acf11412)
    Type: String
  EC2Subnet:
    Default: "subnet-08edd817a280766ff"
    Description: subnet parameter (eg subnet-08edd817a280766ff)
    Type: String
  myVPC:
    Default: "vpc-0b9b80e139f334558"
    Description: VPC parameter (eg vpc-0b9b80e139f334558)
    Type: String
  RDSSubnet1:
    Default: "subnet-054379b3f39cce09e"
    Description: subnet parameter (eg subnet-08edd817a280766ff)
    Type: String  
  RDSSubnet2:
    Default: "subnet-054379b3f39cce09e"
    Description: subnet parameter (eg subnet-08edd817a280766ff)
    Type: String
  KeyPair:
    Default: "test1-sree"
    Description: Key Pair parameter (eg test1-sree)
    Type: String
  S3BucketName:
    Default: "code-deploy.raik.me.csye6225.com"
    Description: S3 Bucket parameter (eg test1-sree)
    Type: String
  S3BucketNameCD:
    Default: "code-deploy.raik.me.csye6225.com"
    Description: S3 Bucket parameter (eg test1-sree)
    Type: String
  SNSTOPICARN:
    Default: "arn:aws:sns:us-east-1:<account_id>:SNSTopicResetPassword"
    Description: SNS topic ARN for reset password
    Type: String
  DomainName:
    Default: "csye6225-s19-mandakathils.me."
    Description: Domain Name for the server
    Type: String
  DomainCert:
    Default: "arn:aws:acm:us-east-1:165960615265:certificate/bcb8fa5c-f3df-4c5e-b948-d2c40d5c68e9"
    Description: Domain Cert
    Type: String
    #WAF PARAMETERS
  stackPrefix:
    Type: String
    Description: The prefix to use when naming resources in this stack. Normally we would use the stack name, but since this template can be used as a resource in other stacks we want to keep the naming consistent. No symbols allowed.
    ConstraintDescription: Alphanumeric characters only, maximum 10 characters
    AllowedPattern: ^[a-zA-z0-9]+$
    MaxLength: 10
    Default: generic
  stackScope:
    Type: String
    Description: You can deploy this stack at a regional level, for regional WAF targets like Application Load Balancers, or for global targets, such as Amazon CloudFront distributions.
    AllowedValues:
      - Global
      - Regional
    Default: Regional
  ruleAction:
    Type: String
    Description: The type of action you want to iplement for the rules in this set. Valid options are COUNT or BLOCK.
    AllowedValues:
      - BLOCK
      - COUNT
    Default: BLOCK
  includesPrefix:
    Type: String
    Description: This is the URI path prefix (starting with '/') that identifies any files in your webroot that are server-side included components, and should not be invoked directly via URL. These can be headers, footers, 3rd party server side libraries or components. You can add additional prefixes later directly in the set.
    Default: /includes
  adminUrlPrefix:
    Type: String
    Description: This is the URI path prefix (starting with '/') that identifies your administrative sub-site. You can add additional prefixes later directly in the set.
    Default: /admin
  adminRemoteCidr:
    Type: String
    Description: This is the IP address allowed to access your administrative interface. Use CIDR notation. You can add additional ones later directly in the set.
    Default: 127.0.0.1/32
  maxExpectedURISize:
    Type: Number
    Description: Maximum number of bytes allowed in the URI component of the HTTP request. Generally the maximum possible value is determined by the server operating system (maps to file system paths), the web server software, or other middleware components. Choose a value that accomodates the largest URI segment you use in practice in your web application.
    Default: 512
  maxExpectedQueryStringSize:
    Type: Number
    Description: Maximum number of bytes allowed in the query string component of the HTTP request. Normally the  of query string parameters following the "?" in a URL is much larger than the URI , but still bounded by the  of the parameters your web application uses and their values.
    Default: 1024
  maxExpectedBodySize:
    Type: Number
    Description: Maximum number of bytes allowed in the body of the request. If you do not plan to allow large uploads, set it to the largest payload value that makes sense for your web application. Accepting unnecessarily large values can cause performance issues, if large payloads are used as an attack vector against your web application.
    Default: 4096
  maxExpectedCookieSize:
    Type: Number
    Description: Maximum number of bytes allowed in the cookie header. The maximum size should be less than 4096, the size is determined by the amount of information your web application stores in cookies. If you only pass a session token via cookies, set the size to no larger than the serialized size of the session token and cookie metadata.
    Default: 4093
  csrfExpectedHeader:
    Type: String
    Description: The custom HTTP request header, where the CSRF token value is expected to be encountered
    Default: x-csrf-token
  csrfExpectedSize:
    Type: Number
    Description: The size in bytes of the CSRF token value. For example if it's a canonically formatted UUIDv4 value the expected size would be 36 bytes/ASCII characters
    Default: 36
    # END WAF PARAMETERS

#WAF META DATA
## ::METADATA::
## CloudFormation parameter UI definitions
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Resource Prefix
        Parameters:
          - stackPrefix
      - Label:
          default: WAF Implementation
        Parameters:
          - stackScope
          - ruleAction
      - Label:
          default: Generic HTTP Request Enforcement
        Parameters:
          - maxExpectedURISize
          - maxExpectedQueryStringSize
          - maxExpectedBodySize
          - maxExpectedCookieSize
      - Label:
          default: Administrative Interface
        Parameters:
          - adminUrlPrefix
          - adminRemoteCidr
      - Label:
          default: Cross-Site Request Forgery (CSRF)
        Parameters:
          - csrfExpectedHeader
          - csrfExpectedSize
      - Label:
          default: Application Specific
        Parameters:
          - includesPrefix
    ParameterLabels:
      stackPrefix:
        default: Resource Name Prefix
      stackScope:
        default: Apply to WAF
      ruleAction:
        default: Rule Effect
      includesPrefix:
        default: Server-side components URI prefix
      adminUrlPrefix:
        default: URI prefix
      adminRemoteCidr:
        default: Allowed IP source (CIDR)
      maxExpectedURISize:
        default: Max. size of URI
      maxExpectedQueryStringSize:
        default: Max. size of QUERY STRING
      maxExpectedBodySize:
        default: Max. size of BODY
      maxExpectedCookieSize:
        default: Max. size of COOKIE
      csrfExpectedHeader:
        default: HTTP Request Header
      csrfExpectedSize:
        default: Token Size
# END WAF META DATA

# WAF CONDITION
## ::CONDITIONS::
## Determines if we're generating regional or global resources
Conditions:
  isRegional: !Equals [ !Ref stackScope, Regional ]
  isGlobal: !Equals [ !Ref stackScope, Global ]
#END WAF CONDITION

Resources:

  MyRDSsubnetGroup: 
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: RDS subnet group
      SubnetIds: 
        - Ref: RDSSubnet1
        - Ref: RDSSubnet2
        - Ref: EC2Subnet
      Tags:
      - Key: Name
        Value:
          Fn::Join:
            - '-'
            - [{Ref: 'AWS::StackName'}, 'csye6225', 'rds_subnet']

  RDSSecurityGroup: 
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http, SSH and SSL to client host
      VpcId:
        Ref: myVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        SourceSecurityGroupId: !Ref InstanceSecurityGroup
      Tags:
      - Key: Name
        Value:
          Fn::Join:
            - '-'
            - [{Ref: 'AWS::StackName'}, 'csye6225', 'rds_sg']  

  MyRDSInstance: 
    Type: AWS::RDS::DBInstance
    Properties: 
      AllocatedStorage: "20"
      DBInstanceClass: "db.t2.medium"
      DBInstanceIdentifier: "csye6225-spring2019"
      Engine: "mysql"
      EngineVersion: "5.6.34"
      MultiAZ : false
      MasterUsername: "csye6225master"
      MasterUserPassword: "csye6225password"
      PubliclyAccessible: true
      DBName: "csye6225"
      DBSubnetGroupName: 
        Ref: "MyRDSsubnetGroup"
      VPCSecurityGroups:
        - {Ref : "RDSSecurityGroup"}
      Tags:
      - Key: Name
        Value:
          Fn::Join:
            - '-'
            - [{Ref: 'AWS::StackName'}, 'csye6225', 'rds']

  CodeDeployEC2ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      RoleName: CodeDeployEC2ServiceRole
      AssumeRolePolicyDocument: 
        Version: "2012-10-17" 
        Statement:
           - 
            Effect: "Allow" 
            Principal:
              Service: 
                - "ec2.amazonaws.com" 
            Action: 
              - "sts:AssumeRole" 
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
        - arn:aws:iam::aws:policy/CloudWatchAgentAdminPolicy        
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM     
      Policies:
        - 
         PolicyName: "EC2-S3-Access"
         PolicyDocument:
           Version: "2012-10-17"
           Statement:            
            - 
              Effect: "Allow"
              Action:
                - "s3:Get*"
                - "s3:List*"
              Resource: 
                Fn::Join:
                - ''
                - ['arn:aws:s3:::',!Ref S3BucketNameCD,'/*']
        -
          PolicyName: "Attachment-EC2-S3"
          PolicyDocument:
           Version: "2012-10-17"
           Statement:            
            - 
              Effect: "Allow"
              Action:
                - "s3:*"
              Resource: 
                Fn::Join:
                - ''
                - ['arn:aws:s3:::',!Ref S3BucketName,'/*']

  # DomainCert:
  #   Type: AWS::CertificateManager::Certificate
  #   Properties:
  #     DomainName: !Ref "DomainName"
  #     ValidationMethod: "DNS"
  #     DomainValidationOptions:
  #     - DomainName: !Ref "DomainName"
  #       ValidationDomain: !Ref "DomainName"

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckTimeoutSeconds: 2
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckPath: "/pingTest"
      Port: 80
      TargetGroupAttributes:
      - Key: "deregistration_delay.timeout_seconds"
        Value: 20
      Protocol: HTTP
      TargetType: instance
      VpcId: !Ref myVPC
      Tags:
      - Key: Name
        Value: csye6225-TargetGroup

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "LoadBalancer Security Group"
      GroupName: "LoadBalancerGroupSecurity"
      VpcId: !Ref myVPC
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        FromPort: 443
        ToPort: 443
        CidrIp: "0.0.0.0/0"
      SecurityGroupEgress:
      - IpProtocol: "tcp"
        FromPort: 80
        ToPort: 80
        DestinationSecurityGroupId: !GetAtt InstanceSecurityGroup.GroupId


  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "csye6225LoadBalancer"
      Scheme: "internet-facing"
      IpAddressType: "ipv4"
      Subnets:
      - !Ref RDSSubnet1
      - !Ref RDSSubnet2
      Type: "application"
      SecurityGroups: 
      - !GetAtt LoadBalancerSecurityGroup.GroupId

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        # RedirectConfig:
        #     Host: "#{host}"
        #     Path: "/#{path}"
        #     Port: 443
        #     Protocol: "HTTPS"
        #     Query: "#{query}"
        #     StatusCode: "HTTP_301"
        TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates : 
      - CertificateArn: !Ref DomainCert

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http, SSH and SSL to client host
      VpcId:
        Ref: myVPC
      SecurityGroupIngress: 
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: "0.0.0.0/0"
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: "0.0.0.0/0"
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: "0.0.0.0/0"
      Tags:
      - Key: Name
        Value:
          Fn::Join:
            - '-'
            - [{Ref: 'AWS::StackName'}, 'csye6225', 'sg']

  Route53RecordSetA:
    Type: AWS::Route53::RecordSet
    Properties: 
      AliasTarget:
        DNSName: !GetAtt LoadBalancer.DNSName
        EvaluateTargetHealth: "true"
        HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID
      HostedZoneName: !Join ["",[!Ref DomainName,"."]]
      Comment: "User Domain Name"
      Name: !Join ["",[!Ref DomainName,"."]]
      Type: "A"

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles: 
        - !Ref CodeDeployEC2ServiceRole
    DependsOn: 
      - CodeDeployEC2ServiceRole

  ASGLaunchConfig: 
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties: 
      KeyName: {Ref : "KeyPair"}
      ImageId: {Ref: ImageIdparam} 
      InstanceType: "t2.micro"
      AssociatePublicIpAddress : "true"
      IamInstanceProfile : {Ref : InstanceProfile}
      UserData: 
        Fn::Base64:
          Fn::Join:
            - "\n"
            - [ "#!/bin/bash -xe",
                "sudo bash",
                "export DJANGO_SETTINGS_MODULE=WebProject.settings_dev",
                "cd /home/centos",
                "cat > my.cnf << EOF",
                "[Config]",
                !Join ["",["RDS_HOST=",!GetAtt MyRDSInstance.Endpoint.Address]],
                "RDS_UN=csye6225master",
                "RDS_PASSWORD=csye6225password",
                "RDS_DB=csye6225",
                !Join ["",["DOMAIN_NAME=",!Ref DomainName]],
                !Join ["",["S3_BUCKET=",!Ref S3BucketName]],
                !Join ["",["SNSTOPICARN=",!Ref SNSTOPICARN]],
                "EOF",
              ]
      SecurityGroups: 
        - Ref: "InstanceSecurityGroup"
      BlockDeviceMappings: 
        - DeviceName: "/dev/sdm"
          Ebs: 
            VolumeSize: "50"
            VolumeType: "gp2"
            DeleteOnTermination: "true"
          
  WebServerGroup: 
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      Cooldown: "10"
      VPCZoneIdentifier:
      - !Ref "RDSSubnet1"
      - !Ref "RDSSubnet2"
      LaunchConfigurationName: 
        Ref: "ASGLaunchConfig"
      MinSize: "3"
      MaxSize: "10"
      DesiredCapacity: "3"
      TargetGroupARNs: 
      - !Ref "TargetGroup"
      Tags:
      - Key: Name
        PropagateAtLaunch: "true"
        Value:
          Fn::Join:
            - '-'
            - [{Ref: 'AWS::StackName'}, 'csye6225', 'EC2']
      - Key: ec2-type
        Value: csye-6225
        PropagateAtLaunch: "true"

  WebServerScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref WebServerGroup
      AdjustmentType: "ChangeInCapacity"
      Cooldown: "30"
      ScalingAdjustment: "1"


  WebServerScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref WebServerGroup
      AdjustmentType: "ChangeInCapacity"
      Cooldown: "30"
      ScalingAdjustment: "-1"

  CPUAlarmHigh:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "Scale-up if CPU > 10% for 1 minutes"
      MetricName: "CPUUtilization"
      Namespace: "AWS/EC2"
      Statistic: "Average"
      Period: "60"
      EvaluationPeriods: "1"
      DatapointsToAlarm: "1"
      Threshold: "10"
      AlarmActions:
      - !Ref WebServerScaleUpPolicy
      Dimensions:
      - Name: AutoScalingGroupName
        Value: !Ref WebServerGroup
      ComparisonOperator: "GreaterThanThreshold"

  CPUAlarmLow:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "Scale-down if CPU < 5% for 1 minutes"
      MetricName: "CPUUtilization"
      Namespace: "AWS/EC2"
      Statistic: "Average"
      Period: "60"
      EvaluationPeriods: "1"
      DatapointsToAlarm: "1"
      Threshold: "5"
      AlarmActions:
      - !Ref WebServerScaleDownPolicy
      Dimensions:
      - Name: AutoScalingGroupName
        Value: !Ref WebServerGroup
      ComparisonOperator: "LessThanThreshold"

  MyDynamoDB: #creation of DynamoDB
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - 
          AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - 
          AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      TableName: "csye6225"
      TimeToLiveSpecification:
        AttributeName: passwordTokenExpiry
        Enabled: 'true'
      Tags:
      - Key: Name
        Value:
          Fn::Join:
            - '-'
            - [{Ref: 'AWS::StackName'}, 'csye6225', 'DynamoDB']

  SNSAccess:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - sns:*
          Effect: Allow
          Resource: "*"
      ManagedPolicyName: SNSAccess
      Roles:
      - Ref: CodeDeployEC2ServiceRole

  CodeDeployServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'
        - 'arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy'
        - 'arn:aws:iam::aws:policy/CloudWatchAgentAdminPolicy'
      RoleName: CodeDeployServiceRole

  csye6225Webapp:
    Type: 'AWS::CodeDeploy::Application'
    Properties:
      ApplicationName: csye6225-webapp
      ComputePlatform: Server

  DeploymentGroup:
    Type: 'AWS::CodeDeploy::DeploymentGroup'
    Properties:
      ApplicationName: !Ref csye6225Webapp
      DeploymentGroupName: csye6225-webapp-deployment
      Ec2TagFilters:
        - Type: KEY_AND_VALUE
          Key: ec2-type
          Value: csye-6225
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      LoadBalancerInfo:
        TargetGroupInfoList:
        - Name: !GetAtt TargetGroup.TargetGroupName
      AutoScalingGroups: 
      - !Ref WebServerGroup
      DeploymentStyle:
        DeploymentType: "IN_PLACE"
        DeploymentOption: "WITHOUT_TRAFFIC_CONTROL"
      AutoRollbackConfiguration:
        Enabled: true
        Events:
          - DEPLOYMENT_FAILURE
      ServiceRoleArn: !GetAtt CodeDeployServiceRole.Arn

# WAF RESOURCES
  wafrSQLiSet:
    Type: AWS::WAFRegional::SqlInjectionMatchSet
    Condition: isRegional
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'detect-sqli']]
      SqlInjectionMatchTuples:
        - FieldToMatch:
            Type: URI
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: BODY
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: BODY
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          TextTransformation: HTML_ENTITY_DECODE
  wafgSQLiSet:
    Type: AWS::WAF::SqlInjectionMatchSet
    Condition: isGlobal
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'detect-sqli']]
      SqlInjectionMatchTuples:
        - FieldToMatch:
            Type: URI
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: BODY
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: BODY
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          TextTransformation: HTML_ENTITY_DECODE
  wafrSQLiRule:
    Type: AWS::WAFRegional::Rule
    Condition: isRegional
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'mitigatesqli']]
      Name: !Join ['-', [!Ref stackPrefix, 'mitigate-sqli']]
      Predicates:
        - Type: SqlInjectionMatch
          Negated: false
          DataId: !Ref wafrSQLiSet
  wafgSQLiRule:
    Type: AWS::WAF::Rule
    Condition: isGlobal
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'mitigatesqli']]
      Name: !Join ['-', [!Ref stackPrefix, 'mitigate-sqli']]
      Predicates:
        - Type: SqlInjectionMatch
          Negated: false
          DataId: !Ref wafgSQLiSet

## 2.
  wafrAuthTokenStringSet:
    Type: AWS::WAFRegional::ByteMatchSet
    Condition: isRegional
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-auth-tokens']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          PositionalConstraint: CONTAINS
          TargetString: example-session-id
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: HEADER
            Data: authorization
          PositionalConstraint: ENDS_WITH
          TargetString: .TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
          TextTransformation: URL_DECODE
  wafgAuthTokenStringSet:
    Type: AWS::WAF::ByteMatchSet
    Condition: isGlobal
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-auth-tokens']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          PositionalConstraint: CONTAINS
          TargetString: example-session-id
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: HEADER
            Data: authorization
          PositionalConstraint: ENDS_WITH
          TargetString: .TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
          TextTransformation: URL_DECODE
  wafrAuthTokenRule:
    Type: AWS::WAFRegional::Rule
    Condition: isRegional
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'badauthtokens']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-bad-auth-tokens']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafrAuthTokenStringSet
  wafgAuthTokenRule:
    Type: AWS::WAF::Rule
    Condition: isGlobal
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'badauthtokens']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-bad-auth-tokens']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafgAuthTokenStringSet


## 3.
  wafrXSSSet:
    Type: AWS::WAFRegional::XssMatchSet
    Condition: isRegional
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'detect-xss']]
      XssMatchTuples:
        - FieldToMatch:
            Type: URI
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: BODY
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: BODY
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          TextTransformation: HTML_ENTITY_DECODE
  wafgXSSSet:
    Type: AWS::WAF::XssMatchSet
    Condition: isGlobal
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'detect-xss']]
      XssMatchTuples:
        - FieldToMatch:
            Type: URI
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: BODY
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: BODY
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          TextTransformation: HTML_ENTITY_DECODE
  wafrXSSRule:
    Type: AWS::WAFRegional::Rule
    Condition: isRegional
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'mitigatexss']]
      Name: !Join ['-', [!Ref stackPrefix, 'mitigate-xss']]
      Predicates:
        - Type: XssMatch
          Negated: false
          DataId: !Ref wafrXSSSet
  wafgXSSRule:
    Type: AWS::WAF::Rule
    Condition: isGlobal
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'mitigatexss']]
      Name: !Join ['-', [!Ref stackPrefix, 'mitigate-xss']]
      Predicates:
        - Type: XssMatch
          Negated: false
          DataId: !Ref wafgXSSSet

## 4.
  wafrPathsStringSet:
    Type: AWS::WAFRegional::ByteMatchSet
    Condition: isRegional
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-rfi-lfi-traversal']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: URI
          PositionalConstraint: CONTAINS
          TargetString: ../
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: CONTAINS
          TargetString: ../
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: ../
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: ../
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: CONTAINS
          TargetString: ://
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: CONTAINS
          TargetString: ://
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: ://
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: ://
          TextTransformation: HTML_ENTITY_DECODE
  wafgPathsStringSet:
    Type: AWS::WAF::ByteMatchSet
    Condition: isGlobal
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-rfi-lfi-traversal']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: URI
          PositionalConstraint: CONTAINS
          TargetString: ../
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: CONTAINS
          TargetString: ../
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: ../
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: ../
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: CONTAINS
          TargetString: ://
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: CONTAINS
          TargetString: ://
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: ://
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: ://
          TextTransformation: HTML_ENTITY_DECODE
  wafrPathsRule:
    Type: AWS::WAFRegional::Rule
    Condition: isRegional
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'detectrfilfi']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-rfi-lfi-traversal']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafrPathsStringSet
  wafgPathsRule:
    Type: AWS::WAF::Rule
    Condition: isGlobal
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'detectrfilfi']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-rfi-lfi-traversal']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafgPathsStringSet

## 5.
  wafrAdminUrlStringSet:
    Type: AWS::WAFRegional::ByteMatchSet
    Condition: isRegional
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-admin-url']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: URI
          PositionalConstraint: STARTS_WITH
          TargetString: !Ref adminUrlPrefix
          TextTransformation: URL_DECODE
  wafgAdminUrlStringSet:
    Type: AWS::WAF::ByteMatchSet
    Condition: isGlobal
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-admin-url']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: URI
          PositionalConstraint: STARTS_WITH
          TargetString: !Ref adminUrlPrefix
          TextTransformation: URL_DECODE
  wafrAdminRemoteAddrIpSet:
    Type: AWS::WAFRegional::IPSet
    Condition: isRegional
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-admin-remote-ip']]
      IPSetDescriptors:
        - Type: IPV4
          Value: !Ref adminRemoteCidr
  wafgAdminRemoteAddrIpSet:
    Type: AWS::WAF::IPSet
    Condition: isGlobal
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-admin-remote-ip']]
      IPSetDescriptors:
        - Type: IPV4
          Value: !Ref adminRemoteCidr
  wafrAdminAccessRule:
    Type: AWS::WAFRegional::Rule
    Condition: isRegional
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'detectadminaccess']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-admin-access']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafrAdminUrlStringSet
        - Type: IPMatch
          Negated: true
          DataId: !Ref wafrAdminRemoteAddrIpSet
  wafgAdminAccessRule:
    Type: AWS::WAF::Rule
    Condition: isGlobal
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'detectadminaccess']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-admin-access']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafgAdminUrlStringSet
        - Type: IPMatch
          Negated: true
          DataId: !Ref wafgAdminRemoteAddrIpSet

## 6.
  wafrPHPInsecureQSStringSet:
    Type: AWS::WAFRegional::ByteMatchSet
    Condition: isRegional
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-php-insecure-var-refs']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: _SERVER[
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: _ENV[
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: auto_prepend_file=
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: auto_append_file=
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: allow_url_include=
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: disable_functions=
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: open_basedir=
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: safe_mode=
          TextTransformation: URL_DECODE
  wafgPHPInsecureQSStringSet:
    Type: AWS::WAF::ByteMatchSet
    Condition: isGlobal
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-php-insecure-var-refs']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: _SERVER[
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: _ENV[
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: auto_prepend_file=
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: auto_append_file=
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: allow_url_include=
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: disable_functions=
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: open_basedir=
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: safe_mode=
          TextTransformation: URL_DECODE
  wafrPHPInsecureURIStringSet:
    Type: AWS::WAFRegional::ByteMatchSet
    Condition: isRegional
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-php-insecure-uri']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: php
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: /
          TextTransformation: URL_DECODE
  wafgPHPInsecureURIStringSet:
    Type: AWS::WAF::ByteMatchSet
    Condition: isGlobal
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-php-insecure-uri']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: php
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: /
          TextTransformation: URL_DECODE
  wafrPHPInsecureRule:
    Type: AWS::WAFRegional::Rule
    Condition: isRegional
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'detectphpinsecure']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-php-insecure']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafrPHPInsecureQSStringSet
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafrPHPInsecureURIStringSet
  wafgPHPInsecureRule:
    Type: AWS::WAF::Rule
    Condition: isGlobal
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'detectphpinsecure']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-php-insecure']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafgPHPInsecureQSStringSet
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafgPHPInsecureURIStringSet

## 7.
  wafrSizeRestrictionSet:
    Type: AWS::WAFRegional::SizeConstraintSet
    Condition: isRegional
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'size-restrictions']]
      SizeConstraints:
        - FieldToMatch:
            Type: URI
          TextTransformation: NONE
          ComparisonOperator: GT
          Size: !Ref maxExpectedURISize
        - FieldToMatch:
            Type: QUERY_STRING
          TextTransformation: NONE
          ComparisonOperator: GT
          Size: !Ref maxExpectedQueryStringSize
        - FieldToMatch:
            Type: BODY
          TextTransformation: NONE
          ComparisonOperator: GT
          Size: !Ref maxExpectedBodySize
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          TextTransformation: NONE
          ComparisonOperator: GT
          Size: !Ref maxExpectedCookieSize
  wafgSizeRestrictionSet:
    Type: AWS::WAF::SizeConstraintSet
    Condition: isGlobal
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'size-restrictions']]
      SizeConstraints:
        - FieldToMatch:
            Type: URI
          TextTransformation: NONE
          ComparisonOperator: GT
          Size: !Ref maxExpectedURISize
        - FieldToMatch:
            Type: QUERY_STRING
          TextTransformation: NONE
          ComparisonOperator: GT
          Size: !Ref maxExpectedQueryStringSize
        - FieldToMatch:
            Type: BODY
          TextTransformation: NONE
          ComparisonOperator: GT
          Size: !Ref maxExpectedBodySize
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          TextTransformation: NONE
          ComparisonOperator: GT
          Size: !Ref maxExpectedCookieSize
  wafrSizeRestrictionRule:
    Type: AWS::WAFRegional::Rule
    Condition: isRegional
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'restrictsizes']]
      Name: !Join ['-', [!Ref stackPrefix, 'restrict-sizes']]
      Predicates:
        - Type: SizeConstraint
          Negated: false
          DataId: !Ref wafrSizeRestrictionSet
  wafgSizeRestrictionRule:
    Type: AWS::WAF::Rule
    Condition: isGlobal
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'restrictsizes']]
      Name: !Join ['-', [!Ref stackPrefix, 'restrict-sizes']]
      Predicates:
        - Type: SizeConstraint
          Negated: false
          DataId: !Ref wafgSizeRestrictionSet

## 8.
  wafrCSRFMethodStringSet:
    Type: AWS::WAFRegional::ByteMatchSet
    Condition: isRegional
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-csrf-method']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: METHOD
          PositionalConstraint: EXACTLY
          TargetString: lock
          TextTransformation: LOWERCASE
  wafgCSRFMethodStringSet:
    Type: AWS::WAF::ByteMatchSet
    Condition: isGlobal
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-csrf-method']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: METHOD
          PositionalConstraint: EXACTLY
          TargetString: lock
          TextTransformation: LOWERCASE
  wafrCSRFTokenSizeConstraint:
    Type: AWS::WAFRegional::SizeConstraintSet
    Condition: isRegional
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-csrf-token']]
      SizeConstraints:
        - FieldToMatch:
            Type: HEADER
            Data: !Ref csrfExpectedHeader
          TextTransformation: NONE
          ComparisonOperator: EQ
          Size: !Ref csrfExpectedSize
  wafgCSRFTokenSizeConstraint:
    Type: AWS::WAF::SizeConstraintSet
    Condition: isGlobal
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-csrf-token']]
      SizeConstraints:
        - FieldToMatch:
            Type: HEADER
            Data: !Ref csrfExpectedHeader
          TextTransformation: NONE
          ComparisonOperator: EQ
          Size: !Ref csrfExpectedSize
  wafrCSRFRule:
    Type: AWS::WAFRegional::Rule
    Condition: isRegional
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'enforcecsrf']]
      Name: !Join ['-', [!Ref stackPrefix, 'enforce-csrf']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafrCSRFMethodStringSet
        - Type: SizeConstraint
          Negated: true
          DataId: !Ref wafrCSRFTokenSizeConstraint
  wafgCSRFRule:
    Type: AWS::WAF::Rule
    Condition: isGlobal
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'enforcecsrf']]
      Name: !Join ['-', [!Ref stackPrefix, 'enforce-csrf']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafgCSRFMethodStringSet
        - Type: SizeConstraint
          Negated: true
          DataId: !Ref wafgCSRFTokenSizeConstraint

## 9.
  wafrServerSideIncludeStringSet:
    Type: AWS::WAFRegional::ByteMatchSet
    Condition: isRegional
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-ssi']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: URI
          PositionalConstraint: STARTS_WITH
          TargetString: !Ref includesPrefix
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .cfg
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .conf
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .config
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .ini
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .log
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .bak
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .backup
          TextTransformation: LOWERCASE
  wafgServerSideIncludeStringSet:
    Type: AWS::WAF::ByteMatchSet
    Condition: isGlobal
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-ssi']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: URI
          PositionalConstraint: STARTS_WITH
          TargetString: !Ref includesPrefix
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .cfg
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .conf
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .config
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .ini
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .log
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .bak
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .backup
          TextTransformation: LOWERCASE
  wafrServerSideIncludeRule:
    Type: AWS::WAFRegional::Rule
    Condition: isRegional
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'detectssi']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-ssi']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafrServerSideIncludeStringSet
  wafgServerSideIncludeRule:
    Type: AWS::WAF::Rule
    Condition: isGlobal
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'detectssi']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-ssi']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafgServerSideIncludeStringSet

## 10.
  wafrBlacklistIpSet:
    Type: AWS::WAFRegional::IPSet
    Condition: isRegional
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-blacklisted-ips']]
      IPSetDescriptors:
        - Type: IPV4
          Value: 10.0.0.0/8
        - Type: IPV4
          Value: 192.168.0.0/16
        - Type: IPV4
          Value: 169.254.0.0/16
        - Type: IPV4
          Value: 172.16.0.0/16
        - Type: IPV4
          Value: 127.0.0.1/32
  wafgBlacklistIpSet:
    Type: AWS::WAF::IPSet
    Condition: isGlobal
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-blacklisted-ips']]
      IPSetDescriptors:
        - Type: IPV4
          Value: 10.0.0.0/8
        - Type: IPV4
          Value: 192.168.0.0/16
        - Type: IPV4
          Value: 169.254.0.0/16
        - Type: IPV4
          Value: 172.16.0.0/16
        - Type: IPV4
          Value: 127.0.0.1/32
  wafrBlacklistIpRule:
    Type: AWS::WAFRegional::Rule
    Condition: isRegional
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'blacklistedips']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-blacklisted-ips']]
      Predicates:
        - Type: IPMatch
          Negated: false
          DataId: !Ref wafrBlacklistIpSet
  wafgBlacklistIpRule:
    Type: AWS::WAF::Rule
    Condition: isGlobal
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'blacklistedips']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-blacklisted-ips']]
      Predicates:
        - Type: IPMatch
          Negated: false
          DataId: !Ref wafgBlacklistIpSet

## --
## WebACL containing the above rules evaluated in-order
  wafrOwaspACL:
    Type: AWS::WAFRegional::WebACL
    Condition: isRegional
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'owaspacl']]
      Name: !Join ['-', [!Ref stackPrefix, 'owasp-acl']]
      DefaultAction:
        Type: ALLOW
      Rules:
        - Action:
            Type: !Ref ruleAction
          Priority: 10
          RuleId: !Ref wafrSizeRestrictionRule
        - Action:
            Type: !Ref ruleAction
          Priority: 20
          RuleId: !Ref wafrBlacklistIpRule
        - Action:
            Type: !Ref ruleAction
          Priority: 30
          RuleId: !Ref wafrAuthTokenRule
        - Action:
            Type: !Ref ruleAction
          Priority: 40
          RuleId: !Ref wafrSQLiRule
        - Action:
            Type: !Ref ruleAction
          Priority: 50
          RuleId: !Ref wafrXSSRule
        - Action:
            Type: !Ref ruleAction
          Priority: 60
          RuleId: !Ref wafrPathsRule
        - Action:
            Type: !Ref ruleAction
          Priority: 70
          RuleId: !Ref wafrPHPInsecureRule
        - Action:
            Type: !Ref ruleAction
          Priority: 80
          RuleId: !Ref wafrCSRFRule
        - Action:
            Type: !Ref ruleAction
          Priority: 90
          RuleId: !Ref wafrServerSideIncludeRule
        - Action:
            Type: !Ref ruleAction
          Priority: 100
          RuleId: !Ref wafrAdminAccessRule
  wafgOwaspACL:
    Type: AWS::WAF::WebACL
    Condition: isGlobal
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'owaspacl']]
      Name: !Join ['-', [!Ref stackPrefix, 'owasp-acl']]
      DefaultAction:
        Type: ALLOW
      Rules:
        - Action:
            Type: !Ref ruleAction
          Priority: 10
          RuleId: !Ref wafgSizeRestrictionRule
        - Action:
            Type: !Ref ruleAction
          Priority: 20
          RuleId: !Ref wafgBlacklistIpRule
        - Action:
            Type: !Ref ruleAction
          Priority: 30
          RuleId: !Ref wafgAuthTokenRule
        - Action:
            Type: !Ref ruleAction
          Priority: 40
          RuleId: !Ref wafgSQLiRule
        - Action:
            Type: !Ref ruleAction
          Priority: 50
          RuleId: !Ref wafgXSSRule
        - Action:
            Type: !Ref ruleAction
          Priority: 60
          RuleId: !Ref wafgPathsRule
        - Action:
            Type: !Ref ruleAction
          Priority: 70
          RuleId: !Ref wafgPHPInsecureRule
        - Action:
            Type: !Ref ruleAction
          Priority: 80
          RuleId: !Ref wafgCSRFRule
        - Action:
            Type: !Ref ruleAction
          Priority: 90
          RuleId: !Ref wafgServerSideIncludeRule
        - Action:
            Type: !Ref ruleAction
          Priority: 100
          RuleId: !Ref wafgAdminAccessRule
  MyWebACLAssociation:
    Type: "AWS::WAFRegional::WebACLAssociation"
    Properties:
      ResourceArn: !Ref LoadBalancer
      WebACLId: !Ref wafrOwaspACL

#END WAF RESOURCES